<!DOCTYPE html>
<html>
<head>
  <title>User Management</title>
  <link rel="stylesheet" href="/css/users.css" />
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>

  <h1>User List</h1>
  <button onclick="fetchUsers()">Refresh Local Users</button>
  <button onclick="fetchExternalUsers()">Fetch External Users</button>

  <form id="userForm">
    <h3>Add New User</h3>
    <input type="text" id="name" placeholder="Name" required />
    <input type="email" id="email" placeholder="Email" required />
    <button type="submit">Add User</button>
  </form>

  <table id="userTable">
    <thead>
      <tr>
        <th>ID</th><th>Name</th><th>Email</th>
      </tr>
    </thead>
    <tbody id="userTbody">
      <% users.forEach(user => { %>
        <tr>
          <td><%= user.id %></td>
          <td><%= user.name || 'N/A' %></td>
          <td><%= user.email || 'N/A' %></td>
        </tr>
      <% }) %>
    </tbody>
  </table>

  <script>
    // Handle form submission
    document.getElementById('userForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      const name = document.getElementById('name').value;
      const email = document.getElementById('email').value;

      try {
        await axios.post('/api/users', { name, email });
        fetchUsers(); // refresh user list
        this.reset();
      } catch (err) {
        alert('Error adding user: ' + err.response.data.message);
      }
    });

    // Fetch local users
    async function fetchUsers() {
      try {
        const res = await axios.get('/api/users');
        renderTable(res.data);
      } catch (err) {
        console.error(err);
      }
    }

    // Fetch external users
    async function fetchExternalUsers() {
      try {
        const res = await axios.get('/api/users/external');
        const users = res.data.data || res.data; // handle reqres response
        renderTable(users.map(user => ({
          id: user.id,
          name: `${user.first_name} ${user.last_name}`,
          email: user.email
        })));
      } catch (err) {
        console.error(err);
      }
    }

    // Render users into table
    function renderTable(users) {
      const tbody = document.getElementById('userTbody');
      tbody.innerHTML = '';
      users.forEach(user => {
        const row = `<tr>
          <td>${user.id}</td>
          <td>${user.name || 'N/A'}</td>
          <td>${user.email || 'N/A'}</td>
        </tr>`;
        tbody.innerHTML += row;
      });
    }
  </script>

</body>
</html>
