<!DOCTYPE html>
<html>
<head>
  <title>User List</title>
  <link rel="stylesheet" href="/css/style.css" />
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
  <h1>Users</h1>

  <button onclick="logout()">Logout</button>

  <h3>Add / Update User</h3>
  <form id="addUserForm">
    <input type="hidden" id="userId" />
    <input type="text" id="name" placeholder="Name" required />
    <input type="email" id="email" placeholder="Email" required />
    <input type="password" id="password" placeholder="Password" required />
    <button type="submit">Save</button>
    <button type="button" onclick="resetForm()">Cancel</button>
  </form>

  <h3>User List</h3>
  <button onclick="fetchUsers()">Fetch local Users</button>
  <table>
    <thead>
      <tr>
        <th>ID</th>
        <th>Name</th>
        <th>Email</th>
        <th>Password</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody id="userTableBody"></tbody>
  </table>

  <h3>External Users (from Reqres)</h3>
  <button onclick="fetchExternalUsers()">Fetch External Users</button>
  <table id="externalUserTable">
    <thead>
      <tr>
        <th>ID</th>
        <th>Name</th>
        <th>Email</th>
      </tr>
    </thead>
    <tbody id="externalUserTableBody"></tbody>
  </table>

  <script>
    const token = localStorage.getItem('token');

    function logout() {
      localStorage.removeItem('token');
      window.location.href = '/';
    }

    async function fetchUsers() {
      try {
        const response = await axios.get('/api/users', {
          headers: { Authorization: `Bearer ${token}` }
        });
        const users = response.data;

        const userTableBody = document.getElementById('userTableBody');
        userTableBody.innerHTML = '';

        users.forEach(user => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${user._id}</td>
            <td>${user.name}</td>
            <td>${user.email}</td>
            <td>${user.password || ''}</td>
            <td>
              <button onclick="editUser('${user._id}', '${user.name}', '${user.email}', '${user.password || ''}')">Edit</button>
              <button onclick="deleteUser('${user._id}')">Delete</button>
            </td>
          `;
          userTableBody.appendChild(row);
        });
      } catch (err) {
        alert('Failed to load users. Please login again.');
        logout();
      }
    }

    async function fetchExternalUsers() {
      try {
        const response = await axios.get('/api/users/external', {
          headers: { Authorization: `Bearer ${token}` }
        });
        const externalUsers = response.data.data;

        const externalUserTableBody = document.getElementById('externalUserTableBody');
        externalUserTableBody.innerHTML = '';

        externalUsers.forEach(user => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${user.id}</td>
            <td>${user.first_name} ${user.last_name}</td>
            <td>${user.email}</td>
          `;
          externalUserTableBody.appendChild(row);
        });
      } catch (err) {
        alert('Failed to fetch external users.');
      }
    }

    document.getElementById('addUserForm').addEventListener('submit', async function (e) {
      e.preventDefault();
      const id = document.getElementById('userId').value;
      const name = document.getElementById('name').value;
      const email = document.getElementById('email').value;
      const password = document.getElementById('password').value;

      const payload = { name, email, password };

      try {
        if (id) {
          await axios.put(`/api/users/${id}`, payload, {
            headers: { Authorization: `Bearer ${token}` }
          });
        } else {
          await axios.post('/api/users', payload, {
            headers: { Authorization: `Bearer ${token}` }
          });
        }

        fetchUsers();
        resetForm();
      } catch (err) {
        alert('Error saving user.');
      }
    });

    function editUser(id, name, email, password) {
      document.getElementById('userId').value = id;
      document.getElementById('name').value = name;
      document.getElementById('email').value = email;
      document.getElementById('password').value = password;
    }

    async function deleteUser(id) {
      if (!confirm('Are you sure you want to delete this user?')) return;

      try {
        await axios.delete(`/api/users/${id}`, {
          headers: { Authorization: `Bearer ${token}` }
        });
        fetchUsers();
      } catch (err) {
        alert('Failed to delete user.');
      }
    }

    function resetForm() {
      document.getElementById('userId').value = '';
      document.getElementById('name').value = '';
      document.getElementById('email').value = '';
      document.getElementById('password').value = '';
    }

    window.onload = fetchUsers;
  </script>
</body>
</html>
